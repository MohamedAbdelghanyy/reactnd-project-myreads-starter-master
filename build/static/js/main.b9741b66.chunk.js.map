{"version":3,"sources":["comps/BookShelfChanger.js","comps/Book.js","comps/BookShelf.js","BooksAPI.js","comps/BookSearch.js","App.js","index.js"],"names":["BookShelfChanger","props","react_default","a","createElement","className","onChange","event","onUpdateShelf","bookItem","target","value","shelf","disabled","Book","style","width","height","backgroundImage","imageLinks","smallThumbnail","concat","comps_BookShelfChanger","title","authors","length","join","BookShelf","books","map","book","comps_Book","key","id","updateShelf","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BookSearch","porpTypes","storedBooks","PropTypes","array","isRequired","func","_useState","useState","_useState2","Object","slicedToArray","query","setquery","_useState3","_useState4","searchedBooks","ssBooks","updateQuery","fetch","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksAPI","searchResults","_loop","i","j","shelvedBookIndex","findIndex","react_router_dom","to","type","placeholder","BooksApp","setbooks","flip","setflip","useEffect","updateIndex","b","updatedBookList","push","react_router","exact","path","element","comps_BookShelf","filter","comps_BookSearch","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b9741b66.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst BookShelfChanger = (props) => {\r\n    BookShelfChanger.propTypes = {\r\n        onUpdateShelf: PropTypes.func.isRequired,\r\n        bookItem:PropTypes.object.isRequired\r\n    }\r\n\r\n    return  (<div className=\"book-shelf-changer\">\r\n                <select onChange={(event) => props.onUpdateShelf(props.bookItem, event.target.value)} value={(props.bookItem.shelf ? props.bookItem.shelf : \"none\")}>\r\n                    <option value=\"move\" disabled> Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n            </div>);\r\n}\r\n\r\nexport default BookShelfChanger","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport BookShelfChanger from './BookShelfChanger'\r\n\r\n\r\nconst Book = (props) => {\r\n    Book.propTypes = {\r\n        onUpdateShelf: PropTypes.func.isRequired,\r\n        bookItem: PropTypes.object.isRequired\r\n    }\r\n\r\n    return (<li>\r\n        <div className=\"book\">\r\n            <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{width:128, height: 192, backgroundImage:((props.bookItem.imageLinks && props.bookItem.imageLinks.smallThumbnail) ? `url(${props.bookItem.imageLinks.smallThumbnail})` : \"none\")}}></div>\r\n                <BookShelfChanger\r\n                    onUpdateShelf={props.onUpdateShelf}\r\n                    shelf={props.bookItem.shelf}\r\n                    bookItem={props.bookItem}\r\n                />\r\n            </div>\r\n            <div className=\"book-title\">{props.bookItem.title}</div>\r\n            <div className=\"book-authors\">{(props.bookItem.authors && props.bookItem.authors.length > 1) ? props.bookItem.authors.join(' ') : props.bookItem.authors}</div>\r\n        </div>\r\n    </li>);\r\n}\r\n\r\nexport default Book\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book.js'\r\n\r\nconst BookShelf = (props) => {\r\n    BookShelf.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        books: PropTypes.array.isRequired,\r\n        updateShelf: PropTypes.func.isRequired\r\n    }\r\n\r\n    return  (<div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {props.books.map((book) => (\r\n                        <Book  \r\n                            key={book.id}\r\n                            onUpdateShelf={props.updateShelf}\r\n                            bookItem={book}\r\n                        />                        \r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>);\r\n}\r\n\r\nexport default BookShelf","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport Book from \"./Book\"\r\nimport { Link } from \"react-router-dom\"\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport { useState } from \"react\"\r\n\r\nconst BookSearch =(props) => {\r\n    BookSearch.porpTypes = {\r\n        storedBooks: PropTypes.array.isRequired,\r\n        onUpdateShelf: PropTypes.func.isRequired\r\n    }\r\n\r\n    let [query, setquery] = useState(\"\");\r\n    let [searchedBooks, ssBooks] = useState([]);\r\n\r\n    const updateQuery = (query) => {\r\n\r\n        setquery(query);\r\n\r\n        BooksAPI.search(query).then((searchResults) => {\r\n            if(searchResults && searchResults.length > 0){\r\n                for(let i = 0 ; i < searchResults.length ; i++){\r\n                    for(let j = 0 ; j < props.storedBooks.length ; j++){\r\n                        if(searchResults[i].id === props.storedBooks[j].id){\r\n                            const shelvedBookIndex = props.storedBooks.findIndex((book) => book.id === searchResults[i].id);\r\n                            searchResults[i].shelf = props.storedBooks[shelvedBookIndex].shelf;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ssBooks(searchResults);\r\n        })\r\n    }\r\n\r\n    return  (<div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input  type=\"text\"\r\n                                value={query}\r\n                                placeholder=\"Search by title or author\"\r\n                                onChange={(event) => updateQuery(event.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchedBooks &&\r\n                        searchedBooks.length > 0 &&\r\n                        searchedBooks.map((book) => (\r\n                            <Book\r\n                                key={book.id}\r\n                                onUpdateShelf={props.onUpdateShelf}\r\n                                bookItem={book}\r\n                            />\r\n                        ))} \r\n                    </ol>\r\n                </div>\r\n            </div> );      \r\n}\r\n\r\nexport default BookSearch","import React from 'react'\nimport BookShelf from './comps/BookShelf'\nimport BookSearch from './comps/BookSearch'\nimport * as BooksAPI from './BooksAPI'\nimport { Link } from 'react-router-dom'\nimport { Routes, Route } from 'react-router'\nimport { useState, useEffect} from 'react'\nimport './App.css'\n\n\nconst BooksApp = () => {\n  let [books, setbooks] = useState([]);\n  let [flip, setflip] = useState(true);\n\n  useEffect(() => {\n    BooksAPI.getAll().then((books) => {\n      setbooks(books);\n    })\n  }, []);\n\n  const updateShelf = (book, shelf) => {\n    const updateIndex = books.findIndex((b) => b.id === book.id)\n    const updatedBookList = books\n\n    if(updateIndex === -1){\n      book.shelf = shelf\n      updatedBookList.push(book)\n    }else{\n      updatedBookList[updateIndex].shelf = shelf\n    }\n\n    setbooks(updatedBookList);\n\n    BooksAPI.update(book, shelf)\n\n    setflip(!flip);\n  }\n\n  return (\n    <div className=\"app\">\n        <Routes>\n        <Route exact path=\"/\" element={\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads: A Book Tracking App</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BookShelf\n                  key=\"currentlyReading\"\n                  className=\"bookshelf\"\n                  title=\"Currently Reading\"\n                  books={books.filter((book) => book.shelf === \"currentlyReading\")}\n                  updateShelf={updateShelf}\n                />\n                <BookShelf\n                  key=\"wantToRead\"\n                  className=\"bookshelf\"\n                  title=\"Want to Read\"\n                  books={books.filter((book) => book.shelf === \"wantToRead\")}\n                  updateShelf={updateShelf}\n                />\n                <BookShelf\n                  key=\"read\"\n                  className=\"bookshelf\"\n                  title=\"Read\"\n                  books={books.filter((book) => book.shelf === \"read\")}\n                  updateShelf={updateShelf}\n                />\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\">Add a book</Link>\n            </div>\n          </div>\n        } />\n        <Route exact path='/search' element={\n          <BookSearch\n            storedBooks={books}\n            onUpdateShelf={updateShelf}\n          />\n        } />\n        </Routes>\n    </div>\n  )\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}